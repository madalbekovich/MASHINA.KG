# Generated by Django 4.0 on 2024-01-24 11:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddInfoCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(choices=[('В наличии', 'В наличии'), ('На заказ', 'На заказ'), ('В пути', 'В пути')], default='В наличии', max_length=50, verbose_name='В наличии')),
                ('custom_auto', models.CharField(choices=[('да ', 'да'), ('нет ', 'нет')], default='да', max_length=100, verbose_name='Расстаможен')),
                ('accounting', models.CharField(choices=[('Кыргызстан', 'Кыргызстан'), ('Абхазия', 'Абхазия'), ('Армения', 'Армения'), ('Казахстан', 'Казахстан'), ('Россия', 'Россия'), ('Другая страна', 'Другая страна'), ('Не стоит на учете', 'Не стоит на учете')], default='Кыргызстан', max_length=50, verbose_name='Учет')),
            ],
            options={
                'verbose_name': 'Дополнительная информация',
                'verbose_name_plural': 'Дополнительная информация',
            },
        ),
        migrations.CreateModel(
            name='CarArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=50, verbose_name='регион')),
            ],
        ),
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Brand')),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50, verbose_name='Модель')),
            ],
        ),
        migrations.CreateModel(
            name='CarRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=50, verbose_name='регион')),
            ],
        ),
        migrations.CreateModel(
            name='PassengerCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturing_year', models.IntegerField()),
                ('body', models.CharField(choices=[('Седан', 'Cедан'), ('Универсал', 'Универсал'), ('Хетчбэк', 'Хетчбэк')], max_length=50, verbose_name='Тип кузова')),
                ('generation', models.ImageField(upload_to='media/', verbose_name='Поколение')),
                ('engine', models.CharField(choices=[('БЕНЗИН', 'Бензин'), ('Дизель', 'Дизель')], max_length=50, verbose_name='Двигатель')),
                ('drive', models.CharField(choices=[('Задний', 'Задний'), ('Передний', 'Передный')], max_length=50, verbose_name='Привод')),
                ('gearbox', models.CharField(choices=[('Механика', 'Механика'), ('Автомат', 'Автомат')], max_length=50, verbose_name='Каробка передач')),
                ('wheel', models.CharField(choices=[('Слева', 'Слева'), ('Справа', 'Справа')], max_length=400, verbose_name='Руль')),
                ('modification', models.CharField(max_length=255, verbose_name='Модификация')),
                ('video_youtube', models.URLField(help_text='Введите URL-ссылку на YouTube видео', verbose_name='Видео')),
                ('mark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.carbrand')),
                ('model', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='mark', chained_model_field='mark', on_delete=django.db.models.deletion.CASCADE, to='marketplace.carmodel')),
            ],
            options={
                'verbose_name': 'Добавить объявление',
                'verbose_name_plural': 'Добавить объявление',
            },
        ),
        migrations.CreateModel(
            name='PriceCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('deal_conditions', models.CharField(choices=[('soms', 'сом'), ('usd', 'долл. США')], default='soms', max_length=10, verbose_name='Условия сделки')),
                ('exchange_option', models.CharField(choices=[('Возможность рассрочки', 'Возможность рассрочки'), ('рассмотрю варианты', 'рассмотрю варианты'), ('с доплатой покупателя', 'с доплатой покупателя'), ('с доплатой продавца', 'с доплатой продавца'), ('ключ на ключ', 'ключ на ключ'), ('обмен не предлагать', 'обмен не предлагать'), ('обмен на недвижимость', 'обмен на недвижимость'), ('только обмен', 'только обмен')], default='рассмотрю варианты', max_length=50, verbose_name='Возможность обмена')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.passengercars')),
            ],
            options={
                'verbose_name': 'Цена и условия сделки',
                'verbose_name_plural': 'Цена и условия сделкa',
            },
        ),
        migrations.CreateModel(
            name='PassengersCarsDesc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('хорошее', 'хорошее'), ('идеальное', 'идеальное'), ('аварийное', 'аварийное'), ('новое', 'новое')], max_length=50, verbose_name='Состояние')),
                ('mileage', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Пробег')),
                ('obves', models.BooleanField(default=False, verbose_name='Обвес')),
                ('tinted_windows', models.BooleanField(default=False, verbose_name='Тонировка')),
                ('spoiler', models.BooleanField(default=False, verbose_name='Спойлер')),
                ('alloy_wheels', models.BooleanField(default=False, verbose_name='Литые диски')),
                ('sunroof', models.BooleanField(default=False, verbose_name='Люк')),
                ('winch', models.BooleanField(default=False, verbose_name='Лебёдка')),
                ('roof_rails', models.BooleanField(default=False, verbose_name='Рейлинги')),
                ('roof_rack', models.BooleanField(default=False, verbose_name='Багажник')),
                ('tow_hitch', models.BooleanField(default=False, verbose_name='Фаркоп')),
                ('panoramic_roof', models.BooleanField(default=False, verbose_name='Панорамная крыша')),
                ('velour_upholstery', models.BooleanField(default=False, verbose_name='Велюр')),
                ('leather_upholstery', models.BooleanField(default=False, verbose_name='Кожа')),
                ('window_shades', models.BooleanField(default=False, verbose_name='Шторки')),
                ('alcantara_upholstery', models.BooleanField(default=False, verbose_name='Алькантара')),
                ('combination_upholstery', models.BooleanField(default=False, verbose_name='Комбинированный')),
                ('wood_trim', models.BooleanField(default=False, verbose_name='Дерево')),
                ('cd_player', models.BooleanField(default=False, verbose_name='CD Player')),
                ('dvd_player', models.BooleanField(default=False, verbose_name='DVD Player')),
                ('mp3_player', models.BooleanField(default=False, verbose_name='MP3 Player')),
                ('usb_port', models.BooleanField(default=False, verbose_name='USB Port')),
                ('subwoofer', models.BooleanField(default=False, verbose_name='Сабвуфер')),
                ('abs', models.BooleanField(default=False, verbose_name='ABS')),
                ('traction_control', models.BooleanField(default=False, verbose_name='Антипробуксовочная система')),
                ('stability_control', models.BooleanField(default=False, verbose_name='Система курсовой устойчивости')),
                ('airbags', models.BooleanField(default=False, verbose_name='Подушки безопасности')),
                ('parking_sensors', models.BooleanField(default=False, verbose_name='Парктроник')),
                ('rearview_camera', models.BooleanField(default=False, verbose_name='Камера заднего вида')),
                ('full_power_package', models.BooleanField(default=False, verbose_name='Полный электропакет')),
                ('alarm_system', models.BooleanField(default=False, verbose_name='Сигнализация')),
                ('factory_auto_start', models.BooleanField(default=False, verbose_name='Автозавод')),
                ('air_conditioning', models.BooleanField(default=False, verbose_name='Кондиционер')),
                ('climate_control', models.BooleanField(default=False, verbose_name='Климат контроль')),
                ('lpg_conversion', models.BooleanField(default=False, verbose_name='Газобалонное оборудование')),
                ('cruise_control', models.BooleanField(default=False, verbose_name='Круиз-контроль')),
                ('heated_front_seats', models.BooleanField(default=False, verbose_name='Подогрев передних сидений')),
                ('heated_seats', models.BooleanField(default=False, verbose_name='Подогрев всех сидений')),
                ('heated_mirrors', models.BooleanField(default=False, verbose_name='Обогрев зеркал')),
                ('xenon_headlights', models.BooleanField(default=False, verbose_name='Ксенон')),
                ('bi_xenon_headlights', models.BooleanField(default=False, verbose_name='Биксенон')),
                ('headlight_washers', models.BooleanField(default=False, verbose_name='Омыватель фар')),
                ('air_suspension', models.BooleanField(default=False, verbose_name='Пневмоподвеска')),
                ('memory_seats', models.BooleanField(default=False, verbose_name='Память сидений')),
                ('memory_steering_wheel', models.BooleanField(default=False, verbose_name='Память руля')),
                ('rain_sensor', models.BooleanField(default=False, verbose_name='Датчик дождя')),
                ('light_sensor', models.BooleanField(default=False, verbose_name='Датчик света')),
                ('advertisements_text', models.TextField(max_length=255, verbose_name='Текст объявление')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.passengercars')),
            ],
            options={
                'verbose_name': 'Комплектация и описание',
                'verbose_name_plural': 'Комплектация и описания',
            },
        ),
        migrations.CreateModel(
            name='PassengerCarsVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_youtube', models.URLField(help_text='Введите URL-ссылку на YouTube видео', verbose_name='Видео')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='marketplace.passengercars')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видеоролики',
            },
        ),
        migrations.CreateModel(
            name='PassengerCarsImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='cars/%Y_%m', verbose_name='Фотографии')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='img', to='marketplace.passengercars')),
            ],
            options={
                'verbose_name': 'Картинка',
                'verbose_name_plural': 'Картинки',
            },
        ),
        migrations.CreateModel(
            name='GovernNumberCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_number', models.CharField(max_length=17, verbose_name='VIN/ Номер кузова')),
                ('govern_number', models.CharField(max_length=10, verbose_name='Гос номер авто')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.passengercars')),
            ],
            options={
                'verbose_name': 'Госномерa и VIN / номер кузова',
                'verbose_name_plural': 'Госномер и VIN / номер кузова',
            },
        ),
        migrations.CreateModel(
            name='ContactsCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_phone_number', models.CharField(max_length=20, verbose_name='Добавить номер')),
                ('area', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='region', chained_model_field='region', on_delete=django.db.models.deletion.CASCADE, to='marketplace.cararea')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.passengercars')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.carregion')),
            ],
        ),
    ]
